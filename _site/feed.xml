<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <link href="https://satheeshds.github.io/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://satheeshds.github.io/" rel="alternate" type="text/html" />
  <updated>2023-02-28T15:20:23+05:30</updated>
  <id>https://satheeshds.github.io/</id>

  
    <title type="html">Satheesh Davidson</title>
  

  
    <subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (or Google search results) and in your feed.xml site description.</subtitle>
  

  

  
  
    <entry>
      <title type="html">Home media server with k8s</title>
      <link href="https://satheeshds.github.io/coding/2021/05/08/home-media-server-with-k8s/" rel="alternate" type="text/html" title="Home media server with k8s" />
      <published>2021-05-08T12:15:00+05:30</published>
      <updated>2021-05-08T12:15:00+05:30</updated>
      <id>https://satheeshds.github.io/coding/2021/05/08/home-media-server-with-k8s</id>
      <content type="html" xml:base="https://satheeshds.github.io/coding/2021/05/08/home-media-server-with-k8s/">&lt;p&gt;Loved to have exclusive media server for my home, previously used Emby application for the purpose and pretty impressed about it. I had NUC device dedicated to that and with the help of docker i have somehow managed to run the application, but the challenge was using graphics card for Emby, Since NUC have small form factor it does not well support adding graphics card. So i decided to give a chance to device abstraction by using k8s. My thought is create a cluster with NUC as master and join personal laptop to it, which has graphics card, And configure the emby application to have more affinity towards graphics card machine, while other supporting software on NUC. I know managing a k8s cluster for media server is a over kill, but who don’t loves having a challenge and learning opportunity.&lt;/p&gt;

&lt;h1 id=&quot;install-k8s-on-nuc&quot;&gt;Install K8s on NUC&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Become root and update and upgrade NUC&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;
 apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get upgrade &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install vim if you haven’t&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; vim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Install Docker
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; docker.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;k8s is not available in Ubuntu’s default repository, so add it manually&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; vim /etc/apt/sources.list.d/kubernetes.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;add below line to the file&lt;/p&gt;
    &lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; deb http&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;apt&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;kubernetes&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;io/ kubernetes&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;xenial main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Add a GPG key for the packages. This will return OK.&lt;/p&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;update with the new repo, which will download repo info.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Install k8s software.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;kubeadm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.21.0-00 &lt;span class=&quot;nv&quot;&gt;kubelet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.21.0-00 &lt;span class=&quot;nv&quot;&gt;kubectl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.21.0-00
 apt-mark hold kubelet kubeadm kubectl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Create configuration file for cluster
    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;Create alias for the master node&lt;/p&gt;

        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; vim /etc/hosts

 add this line, by replacing ip address with your server ip.
 &amp;lt;ipaddress of the master&amp;gt; k8smaster
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Configure networking settings
  There can be only one pos network per cluster, we will use Calico as a network plugin. Currently Calico does not deploy using CNI by default.&lt;/p&gt;

        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  wget https://docs.projectcalico.org/manifests/calico.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;Adjust the network CIDR as per requirement.&lt;/p&gt;

        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  vim calico.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;There are many different configuration settings in this file. The &lt;strong&gt;CALICO_IPV4POOL_CIDR&lt;/strong&gt; must match the value given to &lt;strong&gt;kubeadm init&lt;/strong&gt; in the following step, and avoid conflicts with existing IP ranges of the nodes.&lt;/p&gt;

        &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        
      &lt;span class=&quot;c1&quot;&gt;# The default IPv4 pool to create on startup if none exists. Pod IPs will be&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# chosen from this range. Changing this value after installation will have&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# no effect. This should fall within `--cluster-cidr`.&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CALICO_IPV4POOL_CIDR&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;192.168.1.0/16&quot;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Create cluster config&lt;/p&gt;

        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  vim kubeadm-config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;add the following settings to the file.&lt;/p&gt;

        &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubeadm.k8s.io/v1beta2&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterConfiguration&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;kubernetesVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1.21.0&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;controlPlaneEndpoint&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;k8smaster:6443&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#&amp;lt;-- Use the node alias &lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;networking&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;podSubnet&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;192.168.1.0/16&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;#&amp;lt;-- Match the IP range from the Calico config file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Initialize the master.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; kubeadm init &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;kubeadm-config.yaml &lt;span class=&quot;nt&quot;&gt;--upload-certs&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tee &lt;/span&gt;kubeadm-init.out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;This may return error as docker not running&lt;/p&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ERROR: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

 &lt;span class=&quot;c&quot;&gt;# Start the docker daemon&lt;/span&gt;
 systemctl start docker.service

 &lt;span class=&quot;c&quot;&gt;# Initialize again&lt;/span&gt;
 kubeadm init &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;kubeadm-config.yaml &lt;span class=&quot;nt&quot;&gt;--upload-certs&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tee &lt;/span&gt;kubeadm-init.out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;There may be another error can happen if swap is on&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;swapoff &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Allow a non-root user admin level access to the cluster.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.kube
 &lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; /etc/kubernetes/admin.conf &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.kube/config
 &lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;:&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.kube/config

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Apply the network configuration&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; /root/calico.yaml &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
 kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; calico.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enable bash auto-completion.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bash-completion &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;kubectl completion bash&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;source &amp;lt;(kubectl completion bash)&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="k8s" />
      
        <category term="Home media server" />
      

      
        <summary type="html">Loved to have exclusive media server for my home, previously used Emby application for the purpose and pretty impressed about it. I had NUC device dedicated to that and with the help of docker i have somehow managed to run the application, but the challenge was using graphics card for Emby, Since NUC have small form factor it does not well support adding graphics card. So i decided to give a chance to device abstraction by using k8s. My thought is create a cluster with NUC as master and join personal laptop to it, which has graphics card, And configure the emby application to have more affinity towards graphics card machine, while other supporting software on NUC. I know managing a k8s cluster for media server is a over kill, but who don’t loves having a challenge and learning opportunity.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Dapper and Jsonb</title>
      <link href="https://satheeshds.github.io/coding/tech/2020/12/03/dapper-and-jsonb/" rel="alternate" type="text/html" title="Dapper and Jsonb" />
      <published>2020-12-03T13:10:00+05:30</published>
      <updated>2020-12-03T13:10:00+05:30</updated>
      <id>https://satheeshds.github.io/coding/tech/2020/12/03/dapper-and-jsonb</id>
      <content type="html" xml:base="https://satheeshds.github.io/coding/tech/2020/12/03/dapper-and-jsonb/">&lt;p&gt;This post is to discuss how we can add PostgreSql Jsonb support over dapper ORM.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dapper-tutorial.net/dapper&quot;&gt;Dapper ORM&lt;/a&gt; is an object-relational mapping product for the Microsoft .NET platform: it provides a framework for mapping an object-oriented domain model to a traditional relational database. Dapper supports most of the relational databases including PostgreSql server.&lt;/p&gt;

&lt;p&gt;is live reoloading works?
yes it works&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      
        <category term="[&quot;tech&quot;]" />
      

      
        <category term="ORM" />
      
        <category term="C#" />
      
        <category term=".Net" />
      
        <category term="dapper" />
      
        <category term="postgresql" />
      
        <category term="jsonb" />
      

      
        <summary type="html">This post is to discuss how we can add PostgreSql Jsonb support over dapper ORM.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Project 1</title>
      <link href="https://satheeshds.github.io/web%20development/2019/07/22/project-1/" rel="alternate" type="text/html" title="Project 1" />
      <published>2019-07-22T12:14:12+05:30</published>
      <updated>2019-07-22T12:14:12+05:30</updated>
      <id>https://satheeshds.github.io/web%20development/2019/07/22/project-1</id>
      <content type="html" xml:base="https://satheeshds.github.io/web%20development/2019/07/22/project-1/">&lt;p&gt;&lt;strong&gt;Hello world&lt;/strong&gt;, this is my first Jekyll blog post.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce tempus eget eros eu vulputate. Ut commodo molestie condimentum. Donec condimentum id ipsum quis dictum. Sed quis euismod dolor, vitae vulputate elit. Ut imperdiet viverra dolor, sit amet posuere enim condimentum quis.
I hope you like it!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      
        <category term="Web Development" />
      

      

      
        <summary type="html">Hello world, this is my first Jekyll blog post.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce tempus eget eros eu vulputate. Ut commodo molestie condimentum. Donec condimentum id ipsum quis dictum. Sed quis euismod dolor, vitae vulputate elit. Ut imperdiet viverra dolor, sit amet posuere enim condimentum quis. I hope you like it!</summary>
      

      
      
    </entry>
  
</feed>
